---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  projects?: CollectionEntry<"projects">[];
  posts?: CollectionEntry<"posts">[];
}

const { projects, posts } = Astro.props;

// Determine what data we're working with
const isProjects = !!projects;
const items = projects || posts || [];

// Sort items by date (newest first)
const sortedItems = items.sort((a: any, b: any) => {
  const aDate = isProjects ? a.data.date : new Date(a.data.createdAt);
  const bDate = isProjects ? b.data.date : new Date(b.data.createdAt);
  return bDate.getTime() - aDate.getTime();
});

// Set title and colors based on content type
const title = isProjects ? "Projects" : "Blogs";
const baseUrl = isProjects ? "/projects/" : "/blog/";
---

<!-- Swiper Carousel Section -->
<section class="carousel">
  <h2 class="carousel-title">{title}</h2>
  <div class="swiper-container">
    <div class="swiper-wrapper">
      {sortedItems.map((item: any) => (
        <div class="swiper-slide">
          <a href={`${baseUrl}${item.id}`} class="project-card">
            <div class="card-image">
              {item.data.image ? (
                <Image
                  src={item.data.image}
                  alt={`${item.data.title} ${isProjects ? 'screenshot' : 'cover'}`}
                  loading="lazy"
                />
              ) : (
                <div class="image-placeholder">
                  <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M4 4h16v16H4V4z" stroke="currentColor" stroke-width="2"/>
                    <path d="M9 9h6v6H9V9z" stroke="currentColor" stroke-width="2"/>
                    <circle cx="7.5" cy="7.5" r="1.5" fill="currentColor"/>
                  </svg>
                </div>
              )}
            </div>
            <div class="card-content">
              <h3 class="project-title">{item.data.title}</h3>
              <p class="project-description">{item.data.description}</p>
              <div class="project-meta">
                {isProjects 
                  ? item.data.info.map((info: any) => (
                      <span class="meta-item">{info.text}</span>
                    ))
                  : item.data.tags?.slice(0, 2).map((tag: string) => (
                      <span class="meta-item">{tag}</span>
                    ))
                }
              </div>
            </div>
          </a>
        </div>
      ))}
    </div>
    
    <!-- Navigation arrows -->
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
    
    <!-- Pagination dots -->
    <div class="swiper-pagination"></div>
  </div>
</section>

<style>
  /* Carousel Section - 25% smaller */
  .carousel {
    width: 100%;
    max-width: 900px; /* 75% of 1200px */
    margin: 0 auto;
    padding: 0.75rem 1.5rem; /* 75% of original padding */
  }

  .carousel-title {
    text-align: center;
    font-size: 2rem;
    font-weight: 700;
    color: #fff;
    margin-bottom: 2rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  /* Swiper Container */
  .swiper-container {
    perspective: 1000px;
    width: 100%;
    height: 281px; /* 75% of 375px */
    overflow: visible;
    position: relative;
  }

  .swiper-wrapper {
    display: flex;
    align-items: center;
    transition-timing-function: ease;
  }

  .swiper-slide {
    width: 225px; /* 75% of 300px */
    height: 278px; /* 75% of 370px */
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 12px; /* 75% of 16px */
    overflow: hidden;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.902); /* 75% of original */
    transition: all 0.3s ease;
    opacity: 0.7;
    transform: scale(1.050);
    z-index: 220;
  }

  .swiper-slide-active {
    opacity: 1;
    transform: scale(1);
  }

  /* Project Card */
  .project-card {
    width: 100%;
    height: 100%;
    background: #1a1a1a;
    border-radius: 12px; /* 75% of 16px */
    overflow: hidden;
    display: block;
    text-decoration: none;
    color: inherit;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    cursor: pointer;
    pointer-events: auto;
    position: relative;
    z-index: 10;
  }

  .project-card:hover {
    border-color: #14b8a6;
    box-shadow: 0 15px 30px rgba(20, 184, 166, 0.2); /* 75% of original */
  }

  .card-image {
    height: 124px; /* 75% of 165px */
    background: #2a2a2a;
    display: flex;
    align-items: center;
    justify-content: center;
    border-bottom: 1px solid #333;
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .image-placeholder {
    width: 60px; /* 75% of 80px */
    height: 60px; /* 75% of 80px */
    color: #666;
  }

  .card-content {
    padding: 1.125rem; /* 75% of 1.5rem */
    height: 112px; /* 75% of 150px */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .project-title {
    color: #fff;
    font-size: 0.94rem; /* 75% of 1.25rem */
    font-weight: 600;
    margin: 0 0 0.375rem 0; /* 75% of 0.5rem */
    line-height: 1.3;
  }

  .project-description {
    color: #ccc;
    font-size: 0.675rem; /* 75% of 0.9rem */
    line-height: 1;
    margin: 0 0 0.75rem 0; /* 75% of 1rem */
    flex-grow: 1;
  }

  .project-meta {
    display: flex;
    flex-direction: column;
    gap: 0.19rem; /* 75% of 0.25rem */
  }

  .meta-item {
    color: #14b8a6;
    font-size: 0.6rem; /* 75% of 0.8rem */
    font-weight: 500;
  }

  /* Custom Navigation Buttons */
  .swiper-button-next,
  .swiper-button-prev {
    color: #14b8a6;
    background: rgba(20, 184, 166, 0.1);
    width: 38px; /* 75% of 50px */
    height: 38px; /* 75% of 50px */
    border-radius: 50%;
    border: 2px solid #14b8a6;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 10;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .swiper-button-next:hover,
  .swiper-button-prev:hover {
    background: rgba(20, 184, 166, 0.2);
    transform: translateY(-50%) scale(1.1);
  }

  .swiper-button-next:after,
  .swiper-button-prev:after {
    font-size: 12px; /* 75% of 16px */
    font-weight: bold;
    color: #14b8a6;
    font-family: swiper-icons;
  }

  .swiper-button-next:after {
    content: 'next';
  }

  .swiper-button-prev:after {
    content: 'prev';
  }

  .swiper-button-next {
    right: 15px; /* 75% of 20px */
  }

  .swiper-button-prev {
    left: 15px; /* 75% of 20px */
  }

  /* Custom Pagination */
  .swiper-pagination {
    bottom: 15px; /* 75% of 20px */
    text-align: center;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    display: flex;
    gap: 0.375rem; /* 75% of 0.5rem */
    width: auto;
    pointer-events: none;
  }

  .swiper-pagination-bullet {
    pointer-events: all;
    background: rgba(255, 255, 255, 0.3);
    width: 9px; /* 75% of 12px */
    height: 9px; /* 75% of 12px */
    border-radius: 50%;
    margin: 0 3px; /* 75% of 4px */
    transition: background 0.2s;
    cursor: pointer;
    display: inline-block;
  }

  .swiper-pagination-bullet-active {
    background: #ffffff;
    box-shadow: 0 0 7.5px rgba(20, 184, 166, 0.5); /* 75% of original */
    transform: scale(1.2);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .carousel {
      padding: 1.5rem 0.75rem; /* 75% of original */
    }

    .swiper-container {
      height: 255px; /* 75% of 340px */
    }

    .swiper-slide {
      width: 210px; /* 75% of 280px */
      height: 203px; /* 75% of 270px */
    }

    .card-content {
      padding: 0.75rem; /* 75% of 1rem */
      height: 90px; /* 75% of 120px */
    }

    .card-image {
      height: 90px; /* 75% of 120px */
    }

    .swiper-button-next,
    .swiper-button-prev {
      width: 30px; /* 75% of 40px */
      height: 30px; /* 75% of 40px */
    }

    .swiper-button-next:after,
    .swiper-button-prev:after {
      font-size: 10.5px; /* 75% of 14px */
    }
  }

  @media (max-width: 480px) {
    .swiper-slide {
      width: 188px; /* 75% of 250px */
      height: 180px; /* 75% of 240px */
    }

    .card-content {
      height: 79px; /* 75% of 105px */
    }

    .card-image {
      height: 79px; /* 75% of 105px */
    }
  }
</style>

<script>
  declare const Swiper: any;
  // Import Swiper from CDN and initialize
  async function initSwiper() {
    // Load Swiper CSS
    const swiperCSS = document.createElement('link');
    swiperCSS.rel = 'stylesheet';
    swiperCSS.href = 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css';
    document.head.appendChild(swiperCSS);

    // Load Swiper JS
    const swiperScript = document.createElement('script');
    swiperScript.src = 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js';
    
    swiperScript.onload = () => {
      // Initialize Swiper after script loads
      const swiper = new Swiper('.swiper-container', {
        effect: 'coverflow',
        grabCursor: true,
        centeredSlides: false,
        slidesPerView: '3',
        coverflowEffect: {
          rotate: 30,
          depth: 200,
          slideShadows: true,
        },
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        pagination: {
          el: '.swiper-pagination',
          clickable: true,
        },
        loop: true,
        autoplay: {
          delay: 3000,
          disableOnInteraction: false,
        },
        // Allow clicks through to links
        allowTouchMove: true,
        simulateTouch: true,
      });
    };

    document.head.appendChild(swiperScript);
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initSwiper);
  } else {
    initSwiper();
  }
</script>