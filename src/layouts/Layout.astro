---
import "../styles/reset.css";
import "../styles/globals.css";
import "../styles/effects-library.css";
import Analytics from '@vercel/analytics/astro'
import { name, themeColor, twitterHandle } from "spectre:globals";
import type { ImageMetadata } from "astro:assets";
import LayoutGrid from "../components/LayoutGrid.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

interface Props {
	title: string;
	description?: string;
	image?: ImageMetadata;
	pagefindIgnore?: boolean;
	article?: {
		createdAt: Date;
		updatedAt?: Date;
	};
}

const { title, description, image, pagefindIgnore, article } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<title>{title}</title>
		{description && <meta name="description" content={description} />}
		<meta name="theme-color" content={themeColor}>

		<link rel="canonical" href={Astro.site} />

		<meta name="og:title" content={title} />
		{description && <meta name="og:description" content={description} />}
		<meta name="og:image" content={image?.src || '/img/og.png'} />
		<meta name="og:url" content={Astro.site} />
		{!article && <meta name="og:type" content="website" />}
		<meta name="og:locale" content="en" />

		{article && (
			<meta name="og:type" content="article" />
			<meta property="article:published_time" content={article.createdAt.toISOString()} />
			<meta name="author" content={name} />
		)}

		{article && article.updatedAt && (
			<meta property="article:modified_time" content={article.updatedAt.toISOString()} />
		)}

		<meta name="twitter:card" content="summary_large_image" />
		{twitterHandle && (
			<meta name="twitter:site" content={twitterHandle} />
			<meta name="twitter:creator" content={twitterHandle} />
		)}
		<meta name="twitter:title" content={title} />
		{description && <meta name="twitter:description" content={description} />}
		<meta name="twitter:image" content={image?.src || '/img/og.png'} />

		{/* JSON-LD Structured Data */}
		<script type="application/ld+json">
		{
			JSON.stringify({
				"@context": "https://schema.org",
				"@type": article ? "Article" : "WebSite",
				"name": title,
				"description": description,
				"url": Astro.url.href,
				"image": image?.src || '/img/og.png',
				...(article && {
					"headline": title,
					"datePublished": article.createdAt.toISOString(),
					"dateModified": article.updatedAt?.toISOString() || article.createdAt.toISOString(),
					"author": {
						"@type": "Person",
						"name": name,
						"url": "https://stack-junkie.com"
					},
					"publisher": {
						"@type": "Organization",
						"name": "Stack-Junkie",
						"url": "https://stack-junkie.com"
					}
				}),
				...(!article && {
					"@type": "WebSite",
					"name": "Stack-Junkie",
					"url": "https://stack-junkie.com",
					"description": "Electronics tech turned AI-assisted developer documenting the journey to make my first dollar from coding. Follow my $1.00 Challenge using modern AI tools.",
					"author": {
						"@type": "Person",
						"name": "Christopher Kvamme",
						"alternateName": "Stack-Junkie"
					}
				})
			})
		}
		</script>
	</head>
	<body>
		<Navbar />
		<slot name="hero" />
		<main data-pagefind-ignore={pagefindIgnore}>
			<LayoutGrid>
				<slot name="left" slot="left" />
				<slot name="right" slot="right" />
			</LayoutGrid>
			<slot name="404" />
		</main>
		<slot name="full-width" />
		<slot />
		<Footer />
		<Analytics />
		<!-- <Background /> -->
	</body>
</html>
